const express=require("express");
const router=express.Router();
const checkAdminAuth=require("../middleware/auth");
const userHistoryModel= require('../models/userHistory');
const { route } = require("./payment");
router.post('/',checkAdminAuth,async(req,res)=>{
    try
    {
        
        const data= new userHistoryModel(req.body);
        const savedData= await data.save();
        res.status(200).json({savedData:savedData,code:200,msg:"userHistoryOkay"});
    }
    catch(e)
    {
        res.status(404).json({message:e.message,code:404,msg:'internalServerError'});
        
    }
    
});
router.get('/',checkAdminAuth,async(req,res)=>{
    try
    {
        const fetchData= await userHistoryModel.find();
        if(fetchData)
        res.status(200).json({data:fetchData,code:200,msg:"userHistoryOkay"});
        else
        res.json({code:500,msg:"noDataAvailable"});
    }
    catch(e)
    {
        res.status(404).json({message:e.message,code:404,msg:'200'});
    }
    
});
router.get("/search/:id",checkAdminAuth,async(req,res)=>{
    try
    {
    const _id=req.params.id;
    const data=await userHistoryModel.find({userId:_id});
    if(data)
    res.status(200).json({data:data,code:200,msg:"DataSearched"});
    else
    res.json({code:500,msg:"noDataAvailable"});

}
catch(e)
{
    res.status(404).json({message:e.message,code:404,msg:'internalServerError'});
    }
})
module.exports=router;
